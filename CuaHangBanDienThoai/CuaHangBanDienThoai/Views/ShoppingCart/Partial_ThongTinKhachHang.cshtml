@model CuaHangBanDienThoai.Models.OrderView
@using CuaHangBanDienThoai.Common
<script src="~/Scripts/CheckOut.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.10.7/dist/sweetalert2.all.min.js"></script>

@if (Model != null && !string.IsNullOrEmpty(Model.NameCustomer))
{
    <div class="row m-0 p-0">
        <div class="col-12 m-0 p-0 w-100">
            <div class="form-group">
                <label class="form-label">Bạn có mã giảm giá?</label>
                <div class="input-group grvoucher">
                    <div class="voucherInput">
                        <input type="text" name="voucherCode" id="voucherCode" placeholder="Mã giảm giá" />
                    </div>
                    <div class="btnVoucher">
                        <button class="btn btn-danger m-0 p-0 btnRemoveVoucher d-none" data-percent="0" data-code="0">Xóa mã</button>
                        <button class="btn  btn-success  m-0 p-0  btnApllyVoucher d-none" data-percent="0" data-code="0">Áp dụng</button>

                    </div>


                </div>
            </div>
            <div class="loadVoucher">

            </div>
            <div class="loadVoucherDetail">

            </div>
        </div>

    </div>


}




@if (Model != null && !string.IsNullOrEmpty(Model.NameCustomer))
{

    <form id="checkOutForm" enctype="multipart/form-data">

        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        <div class="col-12 ">


            <div class="loadAddress">
                <div class="d-flex justify-content-between align-items-center w-100">
                    <h5 class="text-uppercase mb-0 mt-0">Thông tin khách hàng</h5>
                    <button type="button" class="btn btn-sm btnAddAddress btn-success mt-0 px-2 py-1 " style="font-size: 14px;width:120px; border-radius:12px;">
                        Thay đổi
                    </button>
                </div>

                <div class="form-row">
                    <div class="row col-md-12">

                    </div>
                </div>




                <div class="form-row">
                    <div class="row col-md-12">
                        <div class="col-lg-6">
                            <div class="input-data">
                                <input type="text" name="NameCustomer" id="NameCustomer"
                                       value="@Model.NameCustomer.Trim()"
                                       @(string.IsNullOrEmpty(Model.NameCustomer) ? "" : "readonly")>
                                <div class="underline"></div>
                                <label for="">Người nhận</label>
                            </div>

                        </div>
                        <div class="col-md-6">
                            <div class="input-data">
                                <input type="number" name="PhoneCustomer" id="PhoneCustomer" value="@Model.PhoneCustomer" @(string.IsNullOrEmpty(Model.PhoneCustomer) ? "" : "readonly")>
                                <div class="underline"></div>
                                <label for="PhoneCustomer">
                                    Số Điện Thoại
                                </label>
                            </div>
                        </div>

                    </div>
                    <div class="row col-md-12">
                        <div class="col-lg-12">
                            <div class="input-data">
                                <input type="text" name="Email" id="Email"
                                       value="@Model.Email.Trim()"
                                       @(string.IsNullOrEmpty(Model.Email) ? "" : "readonly")>
                                <div class="underline"></div>
                                <label for="">Email</label>
                            </div>
                        </div>

                    </div>
                    <div class="row col-md-12">
                        <div class="col-lg-12">
                            <div class="input-data">
                                <input type="text" name="Location" id="Location"
                                       value="@Model.Location.Trim()"
                                       @(string.IsNullOrEmpty(Model.Location) ? "" : "readonly")>
                                <div class="underline"></div>
                                <label for="">Địa chỉ</label>
                            </div>
                        </div>

                    </div>

                </div>






                <div class="row form-row">

                    <div class="input-data textarea">
                        <textarea rows="8" cols="80" name="Note" id="Note" required></textarea>
                        <br />
                        <div class="underline"></div>
                        <label for="">Ghi chú</label>
                        <br />

                    </div>
                </div>
                <div class="col-lg-12 ">
                    <div class="expressDeliveryGr">
                        <ul class="expressDeliveryGrUl">

                            <li class="expressitem">

                                <input type="checkbox" class="custom-control-input" id="delivery" name="delivery" />
                                <span>Hoả tốc (TP.Hồ Chí Minh)</span>
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="row" style="border-top: 1px solid rgba(0,0,0,.1); padding: 2vh 0;">
                    <div class="form-group">
                        <label>Hình thức thanh toán</label>
                        <select class="form-control" id="drTypePayment" name="TypePayment">
                            <option value="1" selected>COD</option>
                            <option value="2" id="chuyenkhoan">Chuyển khoản</option>

                        </select>
                    </div>
                    <div class="form-group" id="load_form_payment" style="display:none;">
                        <h4> <label>Chọn phương thức thanh toán:</label><br /></h4>
                        <h5>Cách 1: Chuyển hướng sang VNPAY chọn phương thức thanh toán</h5>
                        <label>

                            <input type="checkbox" class="TypePaymentVN" name="TypePaymentVN" value="0" checked /><img src="~/images/Logo/Logo-VNPAY-QR-1.png" style=" width:80px;height:15px" /> Cổng thanh toán VNPAYQR

                        </label>
                        <h5>Cách 2: Tách phương thức thanh toán tại site của Merchant</h5>
                        <label><input type="checkbox" class="TypePaymentVN" name="TypePaymentVN" value="1" /> Thanh toán qua ứng dụng hỗ trợ VNPAYQR </label><br />
                        <label><input type="checkbox" class="TypePaymentVN" name="TypePaymentVN" value="2" /> ATM-Tài khoản ngân hàng nội địa </label><br />
                        <label><input type="checkbox" class="TypePaymentVN" name="TypePaymentVN" value="3" /> Thanh toán qua thẻ quốc tế </label><br />
                    </div>

                </div>
            </div>
            <br />
            <div class="row" style="border-top: 1px solid rgba(0,0,0,.1); padding: 2vh 0;">
                <div class="col"><b>Tạm tính</b></div>
                <div class="col d-flex justify-content-end text-right pt-1">
                    <p>  <span class="text-danger priceCheckOut">  @($"{Common.FormatNumber(ViewBag.TotalPrice)}đ") </span></p>
                </div>

            </div>
            <div class="row PriceShip hide">
                <div class="col"><b>Phí ship  </b></div>
                <div class="col d-flex justify-content-end text-right pt-1">
                    @*<p> <span class="text-danger    ">Phí thay đổi lộ trình: 5.500 đồng /km</span></p>*@
                </div>

            </div>
            <div class="row" style="border-top: 1px solid rgba(0,0,0,.1); padding: 2vh 0;">


            </div>
            <div class="row justify-content-center ">

                <div class="loading-overlay" style="display:none;">
                    <img src="~/Content/css/client/ajax-loader.gif" class="loading-spinner" />
                    <h5 class="sent">Đang gửi ...</h5>
                    <div class="innerLoad  col-3"></div>
                </div>
                <div class="form-row submit-btn">
                    <div class="input-data m-0">
                        <div class="inner"></div>
                        <button @*type="submit"*@ class="btnCheckOutS ">Đặt hàng</button>

                    </div>
                </div>

                <div class="back-to-shop"><a href="/trang-chu">&leftarrow;<span class="text-muted">Về cửa hàng</span></a></div>
            </div>

        </div>
    </form>

}
else
{
    @Html.Action("ThemAddress", "ShoppingCart")

}
<script>







</script>
<script>
    function CheckAccount() {
        if (!window.sessionStorage.getItem('CustomerId')) {
            createToast('warning', 'fa-solid fa-triangle-exclamation', 'Chú ý', 'Phiên đăng nhập đã hết hạn');
            let countdown = 6;
            const interval = setInterval(function () {

                countdown--;
                createToast('warning', 'fa-solid fa-triangle-exclamation', 'Chú ý',
                    `Phiên đăng nhập đã hết hạn. Chuyển hướng sau ${countdown} giây...`);
                if (countdown <= 0) {
                    clearInterval(interval);
                    $.ajax({
                        url: '/Account/SetRedirectUrl',
                        type: 'POST',
                        data: { redirectUrl: window.location.href },
                        success: function () {

                            window.location.href = '/Account/Logout';
                        }
                    });
                }

            }, 1000);
            return;
        }
    }
    function createToast(type, icon, title, text) {

        const notifications = document.querySelector('.notifications');
        if (!notifications) {
            console.warn('Không tìm thấy phần tử notifications trong DOM');
            return;
        }

        let newToast = document.createElement('div');
        newToast.innerHTML = `
                   <div class="toastNotifi ${type}">
                       <i class="${icon}"></i>
                       <div class="content">
                           <div class="title">${title}</div>
                           <span>${text}</span>
                       </div>
                       <i class="close fa-solid fa-xmark" onclick="this.parentElement.remove()"></i>
                   </div>`;
        notifications.appendChild(newToast);


        newToast.timeOut = setTimeout(() => newToast.remove(), 5000);
    }


    $(document).ready(function () {
        CheckAccount();




        var bg2 = $(".bg-sg2");
        var popup2 = $("#popupBill2");
        var btnAddAddress = $('.btnAddAddress');
        const customerId = sessionStorage.getItem('CustomerId');


        $('.btnAddAddress').on('click', function (e) {

            console.log("customerId", customerId);

            e.preventDefault();
            bg2.show();
            popup2.show();
            $.ajax({
                url: '/ShoppingCart/Partail_ChangeAddress',
                type: 'GET',
                success: function (data) {

                    $('#loadDataBillEdit').html(data);
                },
                error: function (xhr, status, error) {
                    console.error('Có lỗi xảy ra khi lấy dữ liệu giá:', error);
                }
            });

        });
        console.log("customerId", customerId);

        bg2.on('click', function () {
            bg2.hide();
            popup2.hide();
        });

        $('.btnCloseEditBill').on('click', function () {
            bg2.hide();
            popup2.hide();
        });
        if (customerId) {
            console.log("customerId", customerId);


            $('.btnCheckOutS').off('click').on('click', function (event) {
                event.preventDefault();

                const formData = $('#checkOutForm').serialize();
                const token = $('input[name="__RequestVerificationToken"]').val();
                const dataToSend = formData + '&customerId=' + encodeURIComponent(customerId);
                console.log("btnCheckOutS", dataToSend);
                $('.loading-overlay').show();
                $('.sent').show();
                $('.btnCheckOutS').prop('disabled', true);
                $.ajax({
                    url: '/ShoppingCart/CheckOut',
                    type: 'POST',
                    data: dataToSend,
                    headers: {
                        'RequestVerificationToken': token
                    },
                    success: function (res) {
                        if (res.Success) {
                            if (res.Code == 1) {
                                createToast('success', 'fa-solid fa-circle-exclamation', 'Thành công ', 'Mã đơn:  ' + res.OrderCode);
                                setTimeout(() => {
                                    window.location.href = res.Url;
                                }, 1500);
                            } else {
                                location.href = res.Url;
                            }
                        } else {
                            if (res.Code == -4) {
                                $('.loading-overlay').hide();
                                $('.sent').hide();
                                $('.btnCheckOutS').prop('disabled', false);
                                if (res.InsufficientItems && res.InsufficientItems.length > 0) {
                                    /*  createToast('warring', 'fa-solid fa-circle-exclamation', 'Thất bại', 'Số lượng kho không đủ');*/
                                    message = "\n";
                                    res.InsufficientItems.forEach(function (item) {
                                        message += "\n" + item.ProductName + "\n";
                                    });

                                    Swal.fire({
                                        icon: "warning",
                                        title: "Số lượng không đủ",
                                        text: message
                                    });

                                    $('.btnCheckOutS').prop('disabled', false);
                                } else {
                                    createToast('warring', 'fa-solid fa-circle-exclamation', 'Thất bại', 'Số lượng kho không đủ');
                                }
                            } else if (res.Code = -2) {
                                createToast('warring', 'fa-solid fa-circle-exclamation', 'Thất bại', res.msg);
                                if (res.Url != null) {
                                    setTimeout(() => {
                                        window.location.href = res.Url;
                                    }, 1500);
                                }
                            }
                        }
                    }, error: function (res) {
                        createToast('warning', 'fa-solid fa-triangle-exclamation', 'Thất bại', 'Hệ thống tạm ngưng');
                    }
                });
            });



        } else {

        }



    });







   /* start voucher*/




    $(document).ready(function () {
        $('.TypePaymentVN').on('change', function () {
            if ($(this).prop('checked')) {
                $('.TypePaymentVN').not(this).prop('checked', false);
            }
        });

        $('body').on('change', '#drTypePayment', function () {
            var type = $(this).val();
            $('#load_form_payment').hide();
            if (type == "2") {
                $('#load_form_payment').show();
            }
        });
        $("#searchString").on("input", function () {
            var inputValue = $(this).val().trim();
            if (inputValue !== "") {
                searchProduct(inputValue);
            }
        });


    });

    $('#voucherCode').on('input', function () {
        var voucherCode = $("#voucherCode").val().trim();
        if (voucherCode && voucherCode.length >= 6) {
            $.ajax({
                url: '/ShoppingCart/GetVoucher',
                type: 'GET',
                dataType: 'json',
                data: { Code: voucherCode },
                success: function (voucher) {


                    if (voucher && voucher.error == null) {


                        var percentPriceReduction = voucher.PercentPriceReduction;
                        showVoucherInfo(voucher.Title, percentPriceReduction);

                        var currentDate = new Date();
                        var startDate = voucher.StartDate ? new Date(voucher.StartDate) : null;
                        var endDate = voucher.EndDate ? new Date(voucher.EndDate) : null;


                        if (voucher.Status === true) {
                            $(".loadVoucher").html('<p class="text-danger">Mã giảm giá đã được sử dụng</p>');
                            $(".btnApllyVoucher, .btnRemoveVoucher").addClass("d-none");
                        } else if (startDate && endDate && currentDate >= startDate && currentDate <= endDate) {
                            showVoucherInfo(voucher.Title, percentPriceReduction);
                            $(".loadVoucher").html('<p class="text-success">Mã giảm giá còn hạn sử dụng nhấn áp dụng để dùng </p>');
                            $(".btnApllyVoucher").removeClass("d-none").attr("data-percent", percentPriceReduction).attr("data-code", voucherCode);
                            $(".btnRemoveVoucher").removeClass("d-none");
                        } else if (currentDate < startDate) {
                            $(".loadVoucher").html('<p class="text-danger">Chương trình voucher chưa bắt đầu</p>');

                            $(".btnRemoveVoucher").removeClass("d-none");
                        } else if (currentDate > endDate) {
                            $(".loadVoucher").html('<p class="text-danger">Mã giảm giá đã hết hạn sử dụng</p>');
                            $(" .btnRemoveVoucher").removeClass("d-none");
                        }
                    }
                    else if (!voucher && voucher.error != null) {
                        $(".loadVoucher").html(`<p class="text-danger">${voucher.error}</p>`);

                        $(".btnRemoveVoucher").addClass("d-none");
                    } else {
                        $(".loadVoucher").html("<p>Không tìm thấy mã giảm giá</p>");
                        $(".btnRemoveVoucher").addClass("d-none");
                    }
                },

                error: function () {
                    console.log("Lỗi khi gửi yêu cầu kiểm tra mã giảm giá.");
                    // Xử lý lỗi ở đây
                }
            });
        }

    })

    $(document).ready(function () {
        $('.btnRemoveVoucher').on('click', function () {
            var percentPriceReduction = $(this).attr("data-percent");

            var code = $(this).attr("data-code");
            $('#voucherCode').val(""); 
            $(".btnApllyVoucher").addClass("d-none").attr("data-percent", "0").attr("data-code", "");

            updatePriceWithDiscount(0, "");
            $(this).addClass("d-none").attr("data-percent", "0").attr("data-code", "");
            $(".loadVoucherDetail").html('');
            $(".loadVoucher").html('');
            
            $(" .btnApllyVoucher,.btnRemoveVoucher").addClass("d-none");

        });


        $(".btnApllyVoucher").on('click', function (e) {
            var percentPriceReduction = $(this).attr("data-percent");

            var code = $(this).attr("data-code");
            updatePriceWithDiscount(percentPriceReduction, code);
            $(".btnApplyVoucher").addClass("d-none").attr("data-percent", "0").attr("data-code", "");

        });
    });
    function updatePriceWithDiscount(percentPriceReduction, code) {
        if (percentPriceReduction && code) {
            $.ajax({
                url: '/ShoppingCart/UseVoucher',
                type: 'POST',
                data: { PercentPriceReduction: percentPriceReduction, code: code },
                success: function (data) {
                    if (data.Success) {
                        document.getElementById("voucherCode").disabled = true;
                        $(" .btnApllyVoucher").addClass("d-none");
                        loadTotalPriceSession();
                        createToast('success', 'fa-solid fa-circle-exclamation', 'Thành công ', 'Áp dụng voucher thành công  ');
                    } else {
                        createToast('warning', 'fa-solid fa-triangle-exclamation', 'Chú ý', 'Áp dụng voucher thất bại');
                    }
                },
                error: function () {
                    createToast('warning', 'fa-solid fa-triangle-exclamation', 'Chú ý', 'Áp dụng voucher thất bại');
                }
            });
        } else {
            $.ajax({
                url: '/ShoppingCart/UseVoucher',
                type: 'POST',
                data: { PercentPriceReduction: percentPriceReduction, code: code },
                success: function (data) {
                    if (data.Success) {
                        document.getElementById("voucherCode").disabled = true;
                        $(" .btnApllyVoucher").addClass("d-none");
                        loadTotalPriceSession();
                        createToast('success', 'fa-solid fa-circle-exclamation', 'Thành công ', 'Xoá voucher thành công  ');
                    } else {
                        createToast('warning', 'fa-solid fa-triangle-exclamation', 'Chú ý', 'Xoá voucher thất bại');
                    }
                },
                error: function () {
                    createToast('warning', 'fa-solid fa-triangle-exclamation', 'Chú ý', 'Xoá voucher thất bại');
                }
            });
        }
    }
    function loadTotalPriceSession() {
        $.ajax({
            url: '/shoppingcart/GetPrice',
            type: 'GET',
            success: function (data) {
                console.log("loadTotalPriceSession", data.TotalPrice);
                $('.priceCheckOut').html(data.TotalPrice + ' đ');
            },
            error: function (xhr, status, error) {
                console.error('Có lỗi xảy ra khi lấy dữ liệu giá:', error);
            }
        });
    }
    function showVoucherInfo(title, percentPriceReduction) {
        var voucherInfo = `
    <div class="d-flex justify-content-between">
        <p class="mb-2">Chương trình giảm: ${title}</p>
        <p class="mb-2 text-success">${percentPriceReduction}% / đơn hàng</p>
    </div>
`;
        $(".loadVoucherDetail").html(voucherInfo);
    }


    



    /* end voucher*/
</script>

