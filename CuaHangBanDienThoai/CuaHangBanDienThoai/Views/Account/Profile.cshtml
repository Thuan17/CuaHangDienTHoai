@model CuaHangBanDienThoai.Models.Customer
@using CuaHangBanDienThoai.Common;

@{
    ViewBag.Title = "Thông tin cá nhân";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    #footer {
        margin: 0 !important;
    }

</style>

<div class="bg-sg2" style="display: none ">

</div>

<div id="popupBill2" style="display: none">
    <div class="card w-100 p-0 m-0">
        <div class="card-header d-flex justify-content-between align-items-center">
            <div class="card-title mb-0">
                <h5 class="m-0">Thay đổi thông tin</h5>
            </div>
            <div class="card-tools">
                <button class="btn btnCloseEditBill m-0" aria-label="Close">
                    <svg xmlns="http://www.w3.org/2000/svg" style="color:red" width="16" height="16" fill="currentColor" class="bi bi-x-octagon-fill" viewBox="0 0 16 16">
                        <path d="M11.46.146A.5.5 0 0 0 11.107 0H4.893a.5.5 0 0 0-.353.146L.146 4.54A.5.5 0 0 0 0 4.893v6.214a.5.5 0 0 0 .146.353l4.394 4.394a.5.5 0 0 0 .353.146h6.214a.5.5 0 0 0 .353-.146l4.394-4.394a.5.5 0 0 0 .146-.353V4.893a.5.5 0 0 0-.146-.353zm-6.106 4.5L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 1 1 .708-.708" />
                    </svg>
                </button>
            </div>
        </div>
        <div class="card-body p-0">
            <div id="loadDataBillEdit">
                <div class="text-center">
                    <img src="~/Content/ckfinder/ckfinder/plugins/gallery/colorbox/images/loading.gif" alt="Loading..." />
                </div>

            </div>
        </div>
    </div>
</div>

<section style="background-color: #eee;" class=" pb-5">
    <div class="container p-0 ">
        <div class="row  mb-4">
            <div class="col mb-0 pb-0">
                <nav aria-label="breadcrumb" class="bg-body-tertiary rounded-3 p-3 mb-2">
                    <ol class="breadcrumb mb-0">
                        <li class="breadcrumb-item"><a href="/trang-chu">Cưa hàng điện thoại</a></li>

                        <li class="breadcrumb-item active" aria-current="page">Hồ sơ của tôi</li>
                    </ol>
                </nav>
            </div>
            <hr class="col-12 p-0 m-0" />
        </div>
        @if (Model != null)
        {
            <div class="row">
                <div class="col-lg-4">
                    <div class="card mb-4">
                        <div class="card-body text-center">
                            @*<img src="~/images/logo/logoweb.png" />*@
                            <img src="@(Model.Image ?? "/images/logo/logoweb.png")" alt="PadaMinStore"
                                 class="rounded-circle img-fluid" style="width: 150px;">
                            <h5 class="my-3">@Model.CustomerName.Trim()</h5>
                            @*<p class="text-muted mb-1">Full Stack Developer</p>
                                <p class="text-muted mb-4">Bay Area, San Francisco, CA</p>*@
                            <div class="d-flex justify-content-center mb-2">
                                <button type="button"  class="btn btn-warning btnChangePass">Cập nhập mật khẩu</button>
                                @*<button type="button"  class="btn btn-primary ms-1">Tin nhắn</button>*@
                            </div>
                        </div>
                    </div>
                    <div class="card mb-4 mb-lg-0">
                        <div class="card mb-4 mb-md-0 ml-0 w-100">
                            <div class="card-header">
                                <div class="card-title">

                                    <p class="mb-2 align-items-center">
                                        <span class="text-primary font-italic me-1">Tỷ lệ</span> Đơn hàng
                                    </p>
                                </div>
                            </div>
                            <div class="card-body m-0 pt-0 ">

                                <div class="tableOrder m-0 mb-2 p-0 w-100">

                                </div>
                            </div>
                        </div>
                       
                    </div>
                </div>
                <div class="col-lg-8">
                    <div class="card m-0 w-100  mb-4" style="">
                        <div class="card-header">
                            <div class="card-title">
                                <h5 class="mt-1">
                                    Thông tin chung
                                </h5>
                            </div>
                        </div>
                        <div class="card-body">
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Tên tài khoản :</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Model.CustomerName.Trim()</p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Email :</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Helper.MaskEmail(Model.Email.Trim())</p>
                                    <input class="hide" value="@Model.Email.Trim()" id="userInputField" />
                                    <input name="__RequestVerificationToken" type="hidden" class="hide" value="@Model.Email.Trim()">

                                </div>
                            </div>
                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Số điện thoại :</p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Helper.MaskPhone(Model.PhoneNumber.Trim())</p>
                                </div>
                            </div>                            <hr>
                            <div class="row">
                                <div class="col-sm-3">
                                    <p class="mb-0">Số lần mua </p>
                                </div>
                                <div class="col-sm-9">
                                    <p class="text-muted mb-0">@Model.NumberofPurchases</p>
                                </div>
                            </div>
                            <hr>
                            <div class="row">

                                <div class="col-sm-12">
                                    <button type="button" class="btn btn-warning mt-0 float-end btnEditProFile" data-id="@Model.CustomerId" style="width:120px;">Cập nhập</button>
                                </div>
                            </div>
                        </div>


                    </div>
                    <div class="row">

                        <div class="col-md-12 p-0">
                            <div class="card mb-4 mb-md-0 w-100">
                                @{
                                    var address = Model.AddressCustomer?.Where(x => x.CustomerId == Model.CustomerId)
                                 .OrderByDescending(x => x.IsDefault == true)
                                 .ToList();

                                }
                                <div class="card-header">
                                    <div class="card-title">

                                        <p class="mb-2 align-items-center">
                                            <span class="text-primary font-italic me-1 float-lg-start">Địa chỉ </span> nhận hàng     @if (address != null)
                                            {
                                                <span class="float-lg-end">Số lượng :<span class="text-danger">@address.Count()</span></span>
                                            }
                                        </p>
                                    </div>
                                </div>
                                <div class="card-body">



                                    @if (address != null)
                                    {
                                        foreach (var item in address)
                                        {

                                            <p class="mb-1" style="font-size: .77rem;">Tên người nhận :@item.CustomerName.Trim()</p>
                                            <p class="mb-1" style="font-size: .77rem;">Số điện thoại @Helper.MaskPhone(item.PhoneNumber)</p>
                                            <p class="mb-1" style="font-size: .77rem;">Địa chi người nhận :@Helper.MaskAddress(item.Location)</p>
                                            <p class="mb-1 text-danger" style="font-size: .77rem;">
                                                @((item.IsDefault.HasValue && item.IsDefault.Value) ? "Địa chỉ mặc định" : "")
                                            </p>

                                            <hr class="mb-1" />
                                        }
                                        <div class="row">

                                            <div class="col-sm-12">
                                                <button type="button" class="btn btn-warning btnAddAddress mt-0 float-end" style="width:120px;">Cập nhập</button>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="row">

                                            <div class="col-sm-12">
                                                <button type="button" class="btn btn-warning mt-0 float-end" style="width:120px;">Tạo địa chỉ</button>
                                            </div>
                                        </div>
                                    }


                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }




    </div>
</section>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.js"></script>
<script>

    function createToast(type, icon, title, text) {

        const notifications = document.querySelector('.notifications');
        if (!notifications) {
            console.warn('Không tìm thấy phần tử notifications trong DOM');
            return;
        }

        let newToast = document.createElement('div');
        newToast.innerHTML = `
            <div class="toastNotifi ${type}">
                <i class="${icon}"></i>
                <div class="content">
                    <div class="title">${title}</div>
                    <span>${text}</span>
                </div>
                <i class="close fa-solid fa-xmark" onclick="this.parentElement.remove()"></i>
            </div>`;
        notifications.appendChild(newToast);


        newToast.timeOut = setTimeout(() => newToast.remove(), 5000);
    }
  $(document).ready(function () {
    var customerId = @Model.CustomerId;
      const maskedEmail = "@ViewBag.MaskedEmail";
      var email = "@ViewBag.Email";
      var userInput = $('#userInputField').val(); 
      console.log("maskedEmail", maskedEmail);
      console.log("email", email);
      console.log("customerId", customerId);
      
      var bg2 = $(".bg-sg2");
      var popup2 = $("#popupBill2");
      var btnAddAddress = $('.btnAddAddress');
      var btnEditProFile = $('.btnEditProFile');
   
      if (email && maskedEmail && customerId) {

          $('.btnChangePass').on('click', function (e) {

              if (!email || !customerId) {
                  console.warn('Email hoặc Customer ID không hợp lệ');
                  return;
              }
              Swal.fire({
                  title: "Bạn muốn thay đổi mật khẩu ?",
                text:"Xác nhận để thay đổi ",
                  icon: "warning",
                  showCancelButton: true,
                  confirmButtonColor: "#3085d6",
                  cancelButtonColor: "#d33",
                  confirmButtonText: "Xác nhận"
              }).then((result) => {
                  if (result.isConfirmed) {
                  
                      $.ajax({
                          url: '/Account/ChangePass',
                          data: { customerid: customerId },
                          type: 'GET',
                          success: function (res) {
                              bg2.show();
                              popup2.show();
                              $('#loadDataBillEdit').html(res);
                          }, error: function (xhr, status, error) {
                              console.error('Có lỗi xảy ra khi lấy dữ liệu giá:', error);
                          }
                      });


                  }
              });
          });

          //$('.btnChangePass').on('click', function (e) {
           
          //    if (!email || !customerId) {
          //        console.warn('Email hoặc Customer ID không hợp lệ');
          //        return;
          //    }
          //    Swal.fire({
          //        title: "Bạn muốn thay đổi mật khẩu ?",
          //        text: `Mã bảo mật gửi về Gmail ${maskedEmail}!`,
          //        icon: "warning",
          //        showCancelButton: true,
          //        confirmButtonColor: "#3085d6",
          //        cancelButtonColor: "#d33",
          //        confirmButtonText: "Gửi về"
          //    }).then((result) => {
          //        if (result.isConfirmed) {
          //            Swal.fire({
          //                title: "Yêu cầu đã được gửi",
          //                text: `Vui lòng kiểm tra mã bảo mật trong Gmail ${maskedEmail}!`,
          //                icon: "success"
          //            });
          //            $(".loader").fadeIn();
          //            $("#preloder").fadeIn("slow");
                    
          //            $.ajax({
          //                url: '/Account/ForgotPassword',
          //                type: 'POST',
          //                data: {
          //                    userInput: email,
          //                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
          //                },

                        
          //                success: function (res) {

          //                    if (res.Success) {
          //                        if (res.Code == 1) {
          //                            createToast('success', 'fa-solid fa-circle-check', 'Thành công', res.msg + 'Đang đổi giao diện');
          //                            $(".loader").fadeOut();
          //                            $("#preloder").fadeOut();
          //                            $.ajax({
          //                                url: '/Account/UpdatePass',
          //                                data: { customerid: customerId },
          //                                type: 'GET',
          //                                success: function (res) {
          //                                    bg2.show();
          //                                    popup2.show();
          //                                    $('#loadDataBillEdit').html(res);
          //                                }, error: function (xhr, status, error) {
          //                                    console.error('Có lỗi xảy ra khi lấy dữ liệu giá:', error);
          //                                }
          //                            });

          //                        }
          //                    } else {
          //                        createToast('warning', 'fa-solid fa-triangle-exclamation', 'Chú ý', res.msg);
          //                    }

                          


                         
          //                }, error: function (xhr, status, error) {
          //                    console.error('Có lỗi xảy ra khi lấy dữ liệu giá:', error);
          //                } 
          //            });


          //        }
          //    });
          //});

      }
     


      $('.btnEditProFile').on('click', function (e) {



          e.preventDefault();
          bg2.show();
          popup2.show();
          $.ajax({
              url: '/Account/UpdateProFile',
              type: 'GET',
              data: { customerid: customerId },
              success: function (res) {

                  $('#loadDataBillEdit').html(res);
              },
              error: function (xhr, status, error) {
                  console.error('Có lỗi xảy ra khi lấy dữ liệu giá:', error);
              }
          });

      });


      $('.btnAddAddress').on('click', function (e) {

          console.log("customerId", customerId);

          e.preventDefault();
          bg2.show();
          popup2.show();
          $.ajax({
              url: '/ShoppingCart/Partail_ChangeAddress',
              type: 'GET',
              success: function (data) {

                  $('#loadDataBillEdit').html(data);
              },
              error: function (xhr, status, error) {
                  console.error('Có lỗi xảy ra khi lấy dữ liệu giá:', error);
              }
          });

      });


      bg2.on('click', function () {
          bg2.hide();
          popup2.hide();
      });

      $('.btnCloseEditBill').on('click', function () {
          bg2.hide();
          popup2.hide();
      });

      $.getJSON('/Account/GetOrderStatistics', { customerId: customerId }, function (data) {
          if (data.error) {
              console.error("Lỗi từ server: ", data.error);
              alert("Có lỗi xảy ra khi lấy dữ liệu: " + data.error);
          } else {
              if (!isNaN(data.SuccessRate) && !isNaN(data.CancelRate) && !isNaN(data.ConFirmRate)) {

                  var nonConfirmProgressHtml = `
                <p class="mt-4 mb-1" style="font-size: .77rem;">Đơn chờ xác nhận: ${data.ConFirmCount}</p>
                <div class="progress" style="height: 5px;">
                    <div class="progress-bar bg-warning" role="progressbar" style="width: ${data.ConFirmRate}%" aria-valuenow="${data.ConFirmRate}" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            `;
                  var successProgressHtml = `
                <p class="mt-4 mb-1" style="font-size: .77rem;">Đơn hàng thành công: ${data.SuccessCount}/${data.TotalOrder}</p>
                <div class="progress" style="height: 5px;">
                    <div class="progress-bar bg-success" role="progressbar" style="width: ${data.SuccessRate}%" aria-valuenow="${data.SuccessRate}" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            `;
                  var cancelProgressHtml = `
                <p class="mt-4 mb-1" style="font-size: .77rem;">Đơn hàng hủy: ${data.CancelCount}/${data.TotalOrder}</p>
                <div class="progress" style="height: 5px;">
                    <div class="progress-bar bg-danger" role="progressbar" style="width: ${data.CancelRate}%" aria-valuenow="${data.CancelRate}" aria-valuemin="0" aria-valuemax="100"></div>
                </div>
            `;
                  $(".tableOrder").append(nonConfirmProgressHtml);
                  $(".tableOrder").append(successProgressHtml);
                  $(".tableOrder").append(cancelProgressHtml);
              } else {
                  console.error("Dữ liệu tỷ lệ không hợp lệ!");
              }
          }
      }).fail(function (jqXHR, textStatus, errorThrown) {
          console.error("Lỗi khi gọi API: ", textStatus, errorThrown);
          alert("Có lỗi xảy ra khi kết nối với server. Vui lòng thử lại sau!");
      });

});


</script>
