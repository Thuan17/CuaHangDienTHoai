@model CuaHangBanDienThoai.Models.Admin_AddProduct
@{
    ViewBag.Title = "Thêm mới sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}


<style>
    .error-message {
        display: none;
        color: red;
    }

    .error-border {
        border: 2px solid red;
    }

    label {
        color: black !important;
    }

    .textarea-custom {
        min-height: 450px !important;
    }
</style>


<link href="~/Content/ckeditor5/ckeditor5.css" rel="stylesheet" />

<div class="container-fluid">
    <!-- Page Heading -->

    <div class="row">
        <div class="col-6">
            <h1 class="h3 mb-2 text-gray-800">Hệ thống quản lý </h1>

        </div>
        <div class="col-6 ">
            <ol class="breadcrumb float-sm-right">
                <li class="breadcrumb-item"><a href="/he-thong-quan-ly">Trang chủ </a></li>
                <li class="breadcrumb-item"><a href="/quan-ly-san-pham">Sản phẩm </a></li>
                <li class="breadcrumb-item active">Thêm mới</li>

            </ol>

        </div>
    </div>

    <!-- DataTales Example -->
    <div class="card shadow mb-4">
        <div class="card-header bg-white py-3">
            <div class="row">
                <div class="col-2">
                    <h6 class="m-0 font-weight-bold text-primary">
                        Thêm sản phẩm
                    </h6>
                    <hr />
                </div>
            </div>

            <div class="row">
                <div class="col-12">
                    <form id="myFormProduct" enctype="multipart/form-data">

                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true)
                        <input type="hidden" id="ImagesJson" name="Items" />
                        <input type="hidden" id="IsGiftCategory" name="IsGiftCategory" />


                        <div class="card">
                            <div class="card-header p-2">
                                <ul class="nav nav-pills">
                                    <li class="nav-item"><a class="nav-link active" href="#activity" data-toggle="tab">Thông tin chung</a></li>
                                    <li class="nav-item"><a class="nav-link" href="#timeline" data-toggle="tab">Hình ảnh</a></li>
                                    <li class="nav-item"><a class="nav-link" href="#settings" data-toggle="tab">Mô tả</a></li>

                                </ul>
                            </div><!-- /.card-header -->
                            <div class="card-body">
                                <div class="tab-content">
                                    <div class="active tab-pane" id="activity">
                                        <div class="row">
                                            <div class="col-lg-12 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Tên  sản phẩm</label>
                                                        @Html.TextBoxFor(x => x.Title, new { @class = "form-control", @placeholder = "Tên sản phẩm", id = "Title" })
                                                    </div>

                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Danh mục sản phẩm</label>
                                                    @Html.DropDownListFor(x => x.ProductCategoryId, ViewBag.ProductCategory as SelectList, "-Chọn danh mục sản phẩm-", new { @class = "form-control", @placeholder = "Dạnh mục sản phẩm" })
                                                    @Html.ValidationMessageFor(x => x.ProductCategoryId, null, new { @class = "text-danger" })
                                                </div>

                                            </div>
                                            <div class="col-md-6">
                                                <div class="form-group">
                                                    <label for="exampleInputEmail1">Hãng sản phẩm</label>
                                                    @Html.DropDownListFor(x => x.ProductCompanyId, ViewBag.ProductCompany as SelectList, "-Chọn hãng sản phẩm-", new { @class = "form-control", @placeholder = "Hãng sản phẩm" })
                                                    @Html.ValidationMessageFor(x => x.ProductCompanyId, null, new { @class = "text-danger" })
                                                </div>

                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Chip   </label>
                                                        @Html.TextBoxFor(x => x.CPU, new { @class = "form-control", @placeholder = "Chip máy ", id = "CPU" })
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-md-6 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Tốc độ Chip</label>
                                                        @Html.TextBoxFor(x => x.CPUspeed, new { @class = "form-control", @placeholder = "Tốc độ Chip", id = "CPUspeed" })
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-lg-6 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">GPU   </label>
                                                        @Html.TextBoxFor(x => x.GPU, new { @class = "form-control", @placeholder = "GPU", id = "GPU" })
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-md-6 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Tốc độ GPU</label>
                                                        @Html.TextBoxFor(x => x.GPUspeed, new { @class = "form-control", @placeholder = "Tốc độ GPU", id = "GPUspeed" })
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-4 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Sim   </label>
                                                        @Html.TextBoxFor(x => x.Sim, new { @class = "form-control", @placeholder = "Sim", id = "Sim" })
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-4 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Hỗ trợ mạng</label>
                                                        @Html.TextBoxFor(x => x.MobileNetwork, new { @class = "form-control", @placeholder = "Tốc độ GPU", id = "MobileNetwork" })
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-4 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Wifi</label>
                                                        @Html.TextBoxFor(x => x.Wifi, new { @class = "form-control", @placeholder = "Wifi", id = "Wifi" })
                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                        <div class="row">
                                            <div class="col-6 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Bluetooth   </label>
                                                        @Html.TextBoxFor(x => x.Bluetooth, new { @class = "form-control", @placeholder = "Bluetooth", id = "Bluetooth" })
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-6 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Cổng kết nối</label>
                                                        @Html.TextBoxFor(x => x.Connector, new { @class = "form-control", @placeholder = "Cổng kết nối", id = "Connector" })
                                                    </div>

                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">

                                            <div class="col-3 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Loại Pin</label>
                                                        @Html.TextBoxFor(x => x.BatteryType, new { @class = "form-control", @placeholder = "Loại Pin", id = "BatteryType" })
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-3 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Hỗ trợ sạc</label>
                                                        @Html.TextBoxFor(x => x.ChargingSupport, new { @class = "form-control", @placeholder = "Hỗ trợ sạc", id = "ChargingSupport" })
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-3 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Công Nghệ Pin</label>
                                                        @Html.TextBoxFor(x => x.BatteryTechnology, new { @class = "form-control", @placeholder = "Cổng kết nối", id = "BatteryTechnology" })
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-3 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Dung lượng Pin   </label>
                                                        @Html.TextBoxFor(x => x.BatteryCapacity, new { @class = "form-control", @placeholder = "Dung lượng Pin  ", id = "BatteryCapacity" })
                                                    </div>

                                                </div>
                                            </div>
                                        </div>

                                        <div class="row">
                                            <div class="col-lg-6 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Kích cỡ màn hình  </label>
                                                        @Html.TextBoxFor(x => x.Screensize, new { @class = "form-control", @placeholder = "Kích cỡ màn hình ", id = "Screensize" })
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="col-md-6 ">
                                                <div class="form-group">
                                                    <div id="TitleContainer" class="form-group">
                                                        <label for="exampleInputEmail1">Hệ điều hành</label>
                                                        @Html.TextBoxFor(x => x.OperatingSystem, new { @class = "form-control", @placeholder = "Hệ điều hành", id = "OperatingSystem" })
                                                    </div>

                                                </div>
                                            </div>
                                        </div>

                                    </div>
                                    <div class="tab-pane" id="timeline">
                                        <div class="row">
                                            <div class="col-md-12 text-right">
                                                <input type="button" class="btn btn-primary" id="iTaiAnh" onclick="BrowseServer();" value="Tải ảnh" />
                                            </div>
                                            <div class="col-md-12">
                                                <table class="table table-hover" id="tbAnhSanPham">
                                                    <thead>
                                                        <tr>
                                                            <th class="text-center">#</th>
                                                            <th class="text-center">Ảnh</th>
                                                            <th class="text-center">Ảnh đại diện</th>
                                                            <th class="text-center">Thao tác</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="tbHtml">
                                                    </tbody>
                                                </table>
                                                <input type="hidden" id="tCurrentId" value="0" />
                                            </div>
                                        </div>
                                    </div>
                                    <div class="tab-pane" id="settings">
                                        <div class="form-group">
                                            <label for="txtDetail">Mô tả</label>

                                            @Html.TextAreaFor(x => x.Description, new { @class = "form-control", id = "txtContent" })


                                        </div>
                                    </div>

                                    <!-- /.tab-pane -->
                                </div>
                                <!-- /.tab-content -->
                            </div><!-- /.card-body -->

                        </div> <!-- /.card -->
                        <div class="col-12 text-center">
                            <button type="button" onclick="if(validateForm()) $('#myFormProduct').submit();" class="btn btn-success col-8">Thêm mới</button>
                        </div>

                    </form>

                </div>

            </div>

        </div>
    </div>
</div>


@section scripts{
    <script>
        $(document).ready(function () {
            CKEDITOR.replace('txtContent', {
                customConfig: '/content/ckeditor/config.js',
                extraAllowedContent: 'span',
                allowedContent: true,
            });

        });
    </script>
    <script>
        $(document).ready(function () {
            $('#myFormProduct').submit(function (event) {
                event.preventDefault();

                console.log('Form Data myFormProduct submit:');
                 let isValid = validateForm();


               
                for (var instance in CKEDITOR.instances) {
                    CKEDITOR.instances[instance].updateElement();
                }
                const formData = $('#myFormProduct').serialize();
                const token = $('input[name="__RequestVerificationToken"]').val();
                console.log('Form Data:', formData);
                if (isValid) {
                    $.ajax({
                        url: '/Admin/Product/Add',
                        type: 'POST',
                        data: formData,
                        success: function (res) {
                            OnSuccessCO(res);
                        },
                        error: function (xhr) {
                            Swal.fire({
                                icon: "error",
                                title: "Lỗi",
                                text: "Hệ thống gặp lỗi thêm sản phẩm.",
                            });
                            console.error(xhr.responseText);
                        }
                    });
                }
               
            });


        });



        // Hàm kiểm tra tính hợp lệ của form
        function validateForm() {
            const Title = $('#Title').val().trim();
            const ProductCategoryId = $('#ProductCategoryId').val().trim();
            const ProductCompanyId = $('#ProductCompanyId').val().trim();
            /*  const image = $('#tCurrentId').val().trim();*/
            const CPU = $('#CPU').val().trim();
            const CPUspeed = $('#CPUspeed').val().trim();
            const OperatingSystem = $('#OperatingSystem').val().trim();
            const GPUspeed = $('#GPUspeed').val().trim();
            const MobileNetwork = $('#MobileNetwork').val().trim();
            const Sim = $('#Sim').val().trim();
            const Wifi = $('#Wifi').val().trim();
            const Bluetooth = $('#Bluetooth').val().trim();
            const BatteryType = $('#BatteryType').val().trim();
            const ChargingSupport = $('#ChargingSupport').val().trim();
            const BatteryTechnology = $('#BatteryTechnology').val().trim();
            const GPU = $('#GPU').val().trim();
            const BatteryCapacity = $('#BatteryCapacity').val().trim();
            const Connector = $('#Connector').val().trim();
            const Screensize = $('#Screensize').val().trim();


            const allFields = [
                'Title', 'tCurrentId',
                'CPU', 'CPUspeed', 'OperatingSystem', 'GPUspeed',
                'MobileNetwork', 'Sim', 'Wifi', 'Bluetooth',
                'BatteryType', 'ChargingSupport', 'BatteryTechnology',
                'GPU', 'BatteryCapacity', 'Connector', 'Screensize'
            ];

            const isAllEmpty = allFields.every(id => $(`#${id}`).val().trim() === "");

            if (isAllEmpty) {
                showError(allFields, "Vui lòng điền đầy đủ thông tin.");
                return false;
            }
            let isValid = true;
            if (!Title) {
                showError('Title', "Vui lòng nhập tên sản phẩm .");
                isValid = false;
            } else {
                removeError('Title');
            }

            if (!ProductCategoryId || ProductCategoryId === "-Chọn danh mục sản phẩm-") {
                showError('ProductCategoryId', "Vui lòng chọn mục sản phẩm.");
                isValid = false;
            } else {
                removeError('ProductCategoryId');
            }
            if (!ProductCompanyId || ProductCompanyId === "-Chọn danh mục sản phẩm-") {
                showError('ProductCompanyId', "Vui lòng chọn mục sản phẩm.");
                isValid = false;
            } else {
                removeError('ProductCompanyId');
            }
            if (!CPU) {
                showError('CPU', "Vui lòng nhập Chip .");
                isValid = false;
            } else {
                removeError('CPU');
            }
            if (!Screensize) {
                showError('Screensize', "Vui lòng nhập kích cỡ màn hình .");
                isValid = false;
            } else {
                removeError('Screensize');
            }
            if (!CPUspeed) {
                showError('CPUspeed', "Tốc độ Chip.");
                isValid = false;
            } else {
                removeError('CPUspeed');
            }

            if (!OperatingSystem) {
                showError('OperatingSystem', "Vui lòng nhập hệ điều hành .");
                isValid = false;
            } else {
                removeError('OperatingSystem');
            }

            if (!GPUspeed) {
                showError('GPUspeed', " Vui lòng nhập tốc độ GPU .");
                isValid = false;
            } else {
                removeError('GPUspeed');
            }
            if (!Screensize) {
                showError('Screensize', " Vui lòng nhập kích cỡ màn hình .");
                isValid = false;
            } else {
                removeError('Screensize');
            }
            if (!Connector) {
                showError('Connector', " Vui lòng nhập cổng kết nối .");
                isValid = false;
            } else {
                removeError('Connector');
            }

            if (!MobileNetwork) {
                showError('MobileNetwork', " Vui lòng nhập mạng di động.");
                isValid = false;
            } else {
                removeError('MobileNetwork');
            }
            if (!Sim) {
                showError('Sim', " Vui lòng nhập sim.");
                isValid = false;
            } else {
                removeError('Sim');
            }
            if (!Wifi) {
                showError('Wifi', " Vui lòng nhập Wifi.");
                isValid = false;
            } else {
                removeError('Wifi');
            }




            if (!Bluetooth) {
                showError('Bluetooth', " Vui lòng nhập Bluetooth.");
                isValid = false;
            } else {
                removeError('Bluetooth');
            }



            if (!BatteryType) {
                showError('BatteryType', " Vui lòng nhập loại Pin.");
                isValid = false;
            } else {
                removeError('BatteryType');
            }

            if (!ChargingSupport) {
                showError('ChargingSupport', " Vui lòng nhập loại hỗ trợ sạc.");
                isValid = false;
            } else {
                removeError('ChargingSupport');
            }
            if (!BatteryTechnology) {
                showError('BatteryTechnology', " Vui lòng nhập cồng nghệ Pin.");
                isValid = false;
            } else {
                removeError('BatteryTechnology');
            }
            if (!GPU) {
                showError('GPU', " Vui lòng nhập công nghệ GPu.");
                isValid = false;
            } else {
                removeError('GPU');
            }
            if (!BatteryCapacity) {
                showError('BatteryCapacity', " Vui lòng nhập dung lượn Pin.");
                isValid = false;
            } else {
                removeError('BatteryCapacity');
            }

          

            return isValid;
        }

        // Hàm hiển thị lỗi
        function showError(elements, message) {
            if (Array.isArray(elements)) {
                elements.forEach(id => {
                    document.getElementById(id).classList.add('error-border');
                });
            } else {
                document.getElementById(elements).classList.add('error-border');
            }

            Swal.fire({
                icon: "warning",
                title: "Chú ý",
                text: message,
            });
        }

        // Hàm xóa lỗi
        function removeError(elements) {
            if (Array.isArray(elements)) {
                elements.forEach(id => {
                    document.getElementById(id).classList.remove('error-border');
                });
            } else {
                document.getElementById(elements).classList.remove('error-border');
            }
        }

        // Hàm xử lý thành công
        function OnSuccessCO(res) {
            if (res.Success) {
                if (res.Code === 1) {
                    Swal.fire({
                        icon: "success",
                        title: "Thêm sản phẩm thành công",
                        toast: true,
                        position: "top-end",
                        showConfirmButton: false,
                        timer: 1500,
                        timerProgressBar: true,
                    });

                    setTimeout(() => window.location.href = "/san-pham", 1500);
                } else {
                    // Xử lý các mã phản hồi khác nếu cần
                }
            } else {
                let errorMessage = "Có lỗi trong quá trình";
                switch (res.Code) {
                    case -2:
                        errorMessage = "Vui lòng điền tên tiêu đề";
                        break;
                    case -3:
                        errorMessage = "Danh mục đã tồn tại...";
                        break;
                    case -5:
                        errorMessage = "Chọn ảnh đại diện";
                        break;
                    case -100:
                        errorMessage = "Lỗi hệ thống...";
                        break;
                }

                Swal.fire({
                    icon: "error",
                    title: "Lỗi",
                    text: errorMessage,
                });
            }
        }

        $(document).on('click', '.btnXoaAnh', function (e) {
            e.preventDefault();
            const id = $(this).data('id');
            $(`#trow_${id}`).remove();
            $('#tCurrentId_Product').val(0);
        });

        $(document).on('click', '.btnXoaAnh', function (e) {
            e.preventDefault();
            var id = $(this).data('id');
            $('#trow_' + id).remove();
            $('#tCurrentId_Product').val(0);
        });

    </script>
    @*<script src="~/Scripts/admin/Product.js"></script>*@
  
}
